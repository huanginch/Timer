{"version":3,"sources":["all.js"],"names":["time","hour","min","sec","pause","timerID","curTime","document","querySelector","renderTime","context","innerHTML","startBtn","pauseBtn","restartBtn","addEventListener","setInterval","updateTime","setAttribute","disabled","clearInterval"],"mappings":";;AAAA,IAAMA,IAAI,GAAG;AACXC,EAAAA,IAAI,EAAE,CADK;AAEXC,EAAAA,GAAG,EAAE,CAFM;AAGXC,EAAAA,GAAG,EAAE;AAHM,CAAb;AAMA,IAAIC,KAAK,GAAG,KAAZ;AACA,IAAIC,OAAO,GAAG,CAAd;AAEA,IAAIC,OAAO,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;;AACA,SAASC,UAAT,GAAsB;AACpB,MAAIR,IAAI,GAAGD,IAAI,CAACC,IAAL,GAAY,EAAZ,GAAiB,MAAMD,IAAI,CAACC,IAA5B,GAAkCD,IAAI,CAACC,IAAlD;AACA,MAAIC,GAAG,GAAGF,IAAI,CAACE,GAAL,GAAW,EAAX,GAAgB,MAAMF,IAAI,CAACE,GAA3B,GAAiCF,IAAI,CAACE,GAAhD;AACA,MAAIC,GAAG,GAAGH,IAAI,CAACG,GAAL,GAAW,EAAX,GAAgB,MAAMH,IAAI,CAACG,GAA3B,GAAiCH,IAAI,CAACG,GAAhD;AACA,MAAIO,OAAO,aAAMT,IAAN,gBAAgBC,GAAhB,eAAwBC,GAAxB,CAAX;AACAG,EAAAA,OAAO,CAACK,SAAR,GAAoBD,OAApB;AACD;;AAED,IAAIE,QAAQ,GAAGL,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAf;AACA,IAAIK,QAAQ,GAAGN,QAAQ,CAACC,aAAT,CAAuB,WAAvB,CAAf;AACA,IAAIM,UAAU,GAAGP,QAAQ,CAACC,aAAT,CAAuB,aAAvB,CAAjB;AAEAI,QAAQ,CAACG,gBAAT,CAA0B,OAA1B,EAAmC,YAAM;AAEvC,MAAG,CAACX,KAAJ,EAAW;AACTC,IAAAA,OAAO,GAAGW,WAAW,CAACC,UAAD,EAAa,IAAb,CAArB;AACD;;AAEDL,EAAAA,QAAQ,CAACM,YAAT,CAAsBC,QAAtB;AACD,CAPD;AASAN,QAAQ,CAACE,gBAAT,CAA0B,OAA1B,EAAmC,YAAM;AACvCX,EAAAA,KAAK,GAAG,IAAR;AACAgB,EAAAA,aAAa,CAACf,OAAD,CAAb;AACD,CAHD;AAKAS,UAAU,CAACC,gBAAX,CAA4B,OAA5B,EAAqC,YAAM;AACzCX,EAAAA,KAAK,GAAG,KAAR;AACAJ,EAAAA,IAAI,CAACC,IAAL,GAAY,CAAZ;AACAD,EAAAA,IAAI,CAACE,GAAL,GAAW,CAAX;AACAF,EAAAA,IAAI,CAACG,GAAL,GAAW,CAAX;AACAM,EAAAA,UAAU;AACX,CAND;;AAQA,SAASQ,UAAT,GAAsB;AACpB;AACA,MAAGjB,IAAI,CAACG,GAAL,KAAa,EAAhB,EAAoB;AAElB;AACAH,IAAAA,IAAI,CAACG,GAAL,GAAW,CAAX;;AACA,QAAIH,IAAI,CAACE,GAAL,KAAa,EAAjB,EAAqB;AACnBF,MAAAA,IAAI,CAACE,GAAL,GAAW,CAAX,CADmB,CAGnB;;AACAF,MAAAA,IAAI,CAACC,IAAL;AACD,KALD,MAMK;AACHD,MAAAA,IAAI,CAACE,GAAL;AACD;AAEF,GAdD,MAeK;AACHF,IAAAA,IAAI,CAACG,GAAL;AACD;;AAEDM,EAAAA,UAAU;AACX,C,CAED;;;AACAA,UAAU","file":"all.js","sourcesContent":["const time = {\n  hour: 0,\n  min: 0,\n  sec: 0\n}\n\nlet pause = false;\nlet timerID = 0;\n\nlet curTime = document.querySelector('#time');\nfunction renderTime() {\n  let hour = time.hour < 10 ? '0' + time.hour: time.hour;\n  let min = time.min < 10 ? '0' + time.min : time.min;\n  let sec = time.sec < 10 ? '0' + time.sec : time.sec;\n  let context = `${hour} : ${min}: ${sec}`;\n  curTime.innerHTML = context;\n}\n\nlet startBtn = document.querySelector('#startBtn');\nlet pauseBtn = document.querySelector('#pauseBtn');\nlet restartBtn = document.querySelector('#restartBtn');\n\nstartBtn.addEventListener('click', () => {\n  \n  if(!pause) {\n    timerID = setInterval(updateTime, 1000);\n  }\n  \n  startBtn.setAttribute(disabled);\n})\n\npauseBtn.addEventListener('click', () => {\n  pause = true;\n  clearInterval(timerID);\n})\n\nrestartBtn.addEventListener('click', () => {\n  pause = false;\n  time.hour = 0;\n  time.min = 0;\n  time.sec = 0;\n  renderTime();\n})\n\nfunction updateTime() {\n  //update second\n  if(time.sec === 59) {\n\n    //update minute\n    time.sec = 0;\n    if (time.min === 59) {\n      time.min = 0;\n\n      //update hour\n      time.hour++;\n    }\n    else {\n      time.min++;\n    }\n\n  }\n  else {\n    time.sec++;\n  }\n\n  renderTime();\n}\n\n//init\nrenderTime();"]}